
name: build and release

on:
  push:
    tags:
      "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        arch:
          - x64
        os:
          - macos-latest
          - ubuntu-22.04
          - windows-latest
        include:
          - arch: x86
            os: windows-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 22
          architecture: ${{ matrix.arch }}
      - run: npm install
      - run: npm run prebuild
        if: matrix.os != 'macos-latest'
      - run: npm run prebuild-darwin-x64+arm64
        if: matrix.os == 'macos-latest'
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.arch }}
          path: prebuilds
          retention-days: 1
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write # Needed for softprops/action-gh-release.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
        with:
          path: prebuilds
      - run: echo "version=$(git describe --tags)" >> $GITHUB_OUTPUT
        id: get_version
      - run:
          tar -cvf "${{ steps.get_version.outputs.version
          }}-darwin-x64+arm64.tar" -C "prebuilds/macos-latest-x64"
          darwin-x64+arm64
      - run:
          tar -cvf "${{ steps.get_version.outputs.version }}-linux-x64.tar" -C
          "prebuilds/ubuntu-22.04-x64" linux-x64
      - run:
          tar -cvf "${{ steps.get_version.outputs.version }}-win32-ia32.tar" -C
          "prebuilds/windows-latest-x86" win32-ia32
      - run:
          tar -cvf "${{ steps.get_version.outputs.version }}-win32-x64.tar" -C
          "prebuilds/windows-latest-x64" win32-x64
      - uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.get_version.outputs.version }}-*.tar
          token: ${{ secrets.GITHUB_TOKEN }}
  publish:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
        with:
          path: prebuilds
      - name: Publish
        run: |
          npm config set provenance true
          echo "//registry.npmjs.org/:_authToken=$secrets.NPM_TOKEN" >> ~/.npmrc
          npm publish --access public
    
      
